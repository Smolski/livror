knitr::kable(borrach, caption = 'Número de borrachudos nos diferentes pontos') %>%
kable_styling(full_width = F) %>%
footnote(general = " Dados simulados.", general_title="Fonte:", footnote_as_chunk = T)
`Até 25 ha`=c(59,8)
`26 ha ou mais`=c(14,31)
qui2=rbind(`Até 25 ha`,`26 ha ou mais`)
colnames(qui2)[2]='Sim'
colnames(qui2)[1]='Não'
qui2
quiquadrado2<-matrix(c(8,3,59,43),nc=2)
quiquadrado2
chisq.test(quiquadrado2)$expected
fisher.test(quiquadrado2)
devtools::install_github("tinytex")
install.packages("devtools")
devtools::install_github("tinytex")
install.packages("tinytex")
install.packages("tinytex")
install.packages("agricolae")
require(kableExtra)
`Até 25 ha`=c(8,59)
`26 ha ou mais`=c(3,43)
qui3=rbind(`Até 25 ha`,`26 ha ou mais`)
colnames(qui3)[2]='Sim'
colnames(qui3)[1]='Não'
kable(qui3, caption = 'Tamanho da propriedade e devolução das embalagens vazias de agrotóxico, agricultores de Cerro Largo, RS, 2017') %>%
add_header_above(c("Tamanho da Propriedade" = 1, "Devolução" = 2)) %>%
footnote(general = " @Ristow2017.", general_title ="Fonte:", footnote_as_chunk = T)
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
Sys.setenv(RSTUDIO_PDFLATEX = "latexmk")
options(width = 80, digits = 4,
bookdown.clean_book = TRUE,
tinytex.verbose = TRUE)
knitr::opts_chunk$set(
tidy = FALSE,
out.width='\\textwidth',
fig.align = "center", comment = NA
)
knitr::include_graphics("paineis.png")
knitr::include_graphics("pacotes,1.png")
knitr::include_graphics("pacotes,2.png")
knitr::include_graphics("r3.png")
knitr::include_graphics("r4.png")
knitr::include_graphics("r4csv.png")
knitr::include_graphics("r6.png")
# soma
19+26
# subtração
19-26
# divisão
4/2
# multiplicação
4*2
# exponenciação
4^2
# prioridade de resolução
19 + 26 /4 -2 *10
((19 + 26) /(4 -2))*10
# raiz quadrada
sqrt(16)
# Logaritmo
log(1)
# maior que
2 > 1
1 > 2
# menor que
1 < 2
# maior ou igual a
0 >= (2+(-2))
# menor ou igual a
1 <= 3
# conjunção
9 > 11 & 0 < 1
# ou
6 < 5 | 0 > -1
# igual a
1 == 2/2
# diferente de
1 != 2
#Criando um objeto simples
objeto = "meu primeiro objeto" #enter
#Agora para retomar o objeto criado:
objeto #enter
#Pode ser efetuada uma operação:
a= 2+1
a
#Lista objetos do ambiente
ls()
#Remover um banco de dados
rm(a)
idade=c('11', '12', '31')
nomes=c("Elisa", "Priscila", "Carol")
cep=c(98700000,98701000,98702000)
idade= as.numeric(idade)
idade
cep = as.character(cep)
cep
#Carregando dados da base do RSdudio iris.
data(iris)
#Visualizando as primeiras 6 colunas
head(iris)
#Resumo do objeto
summary(iris)
#Para visualizar os nomes das colunas dos dados:
names(iris)
#vizualizar as ultimas seis linhas do objetos
tail(iris)
class(iris)
class(iris$Sepal.Length)
class(iris$Especie)
ls.str(iris)
View(iris)
dim(iris)
#Alterar o nome da coluna, sendo que o '[5]' indica que está na quinta coluna.
colnames(iris)[5]='Especie'
#Definindo a função attach para o objeto 'dados'.
attach(iris)
#Efetuando o sumário de 'pop.total'.
summary(Petal.Width)
#Como a coluna 'distrito' é um fator, o sumário será
#a contagem da quantidade de cada fator na coluna.
summary(Especie)
#Função 'tapply', número médio da população total por distrito.
tapply(Sepal.Length, Especie, mean)
#Função 'tapply' considerando NAs:
tapply(Sepal.Length, Especie, mean)
#Função 'tapply' sem considerar NAs:
tapply(Sepal.Length, Especie, mean, na.rm=T)
dadossetosa=subset(iris, Especie=='setosa')
head(dadossetosa)
dadossetosa2=subset(iris, Especie=='setosa'& Sepal.Length>5)
head(dadossetosa2)
# Criação de um vetor
x= c(2, 4, 6)
x
x= c(2:6)
x
# Criação de um vetor a partir do intervalo entre cada elemento e valores
#mínimo e máximo
x= seq(2, 3, by=0.5)
x
x= rep(1:3, times=4)
x
y= rep(1:3, each=3)
y
sexo<-factor(rep(c("F", "M"),each=8))
sexo
numeros=rep(1:3,each=3)
numeros
numeros.f<-factor(numeros)
numeros.f
tratamentos=factor(rep(c("controle","adubo A","adubo B"), each=4))
tratamentos
tratamentos=factor(rep(c("controle","adubo A","adubo B"), each=4),
levels=c("controle", "adubo A", "adubo B"))
tratamentos
participantes=factor(rep("mulheres",10), levels=c("mulheres","homens"))
participantes
sexo=factor(rep(c("F","M"),each=9))
dieta=factor(rep(rep(c("normal","light","diet"), each=3),2),
levels=c("normal", "light","diet"))
peso=c(90, 89, 78, 69, 85, 69, 77, 89, 80, 60, 75, 79, 65, 94,
69, 85, 69, 77)
sexo
dieta
peso=as.numeric(peso)
# média de peso frente ao sexo e dieta
tapply(peso,list(sexo,dieta), mean)
table(participantes)
table(sexo,dieta)
nome.da.matriz= matrix(data=1:12,nrow = 3,ncol = 4)
nome.da.matriz
nome.da.matriz= matrix(data=1:12,nrow = 3,ncol = 4, byrow=T)
nome.da.matriz
lista= list(matriz=matrix(c(1,2,1), nrow=3, ncol=2))
lista
lista= list(matriz=matrix(c(1,2,1,5,7,9), nrow=3, ncol=2),vetor=1:6)
lista
lista
length(lista)
names(lista)
lista.1= list(matriz=matrix(c(1,2,1,5,7,9), nrow=3, ncol=2),
vetor=1:6)
lista.2= list(nomes=c("Marcelo", "Fábio", "Felipe"),
idade=c(25, 34, 26))
c(lista.1,lista.2)
estudantes= c("Camila", "Pedro", "Marcelo","Guilherme")
idade=c(21,17,17,18)
peso=c(65,79,80,100)
informacoes=data.frame(estudantes,idade,peso)
informacoes
informacoes$cidades=c("Nova Hartz","Gramado","Soledade",
"Porto Alegre")
informacoes
length(subset(informacoes$cidades, informacoes$cidades=="Soledade"))
informacoes.2=edit(informacoes)
knitr::include_graphics("95.png")
knitr::include_graphics("10.png")
informacoes.2
# União de um banco de dados (existencia de uma váriavel em comum)
estudantes=c("Guilherme", "Marcelo", "Pedro", "Camila")
altura= c(1.50, 1.9, 1.74, 1.80)
informacoes.3=data.frame(estudantes, altura)
informacoes=merge(informacoes.2,informacoes.3, by="estudantes")
informacoes$Imc=c(peso/(altura^2))
informacoes
# Retirar as linhas que tenham pelo menos um NA:
informacoes<- na.omit(informacoes)
informacoes
# Substituir NA's por zero no data.frame
informacoes[is.na(informacoes)] = 0
informacoes
# Substituir números na coluna
informacoes$idade[informacoes$idade == 17] <- 19
informacoes
# Classificar qualitativamente informações em um determinado intervalo
classificacao=ifelse(informacoes$Imc<25, "peso normal",
"excesso de peso")
informacoes=cbind(informacoes, classificacao)
informacoes
imc=data.frame(Resultado=c("Abaixo de 17",
"Entre 17 e 18,49",
"Entre 18,5 e 24,99",
"Entre 25 e 29,99",
"Entre 30 e 34,99",
"Entre 35 e 39,99",
"Acima de 40"),
Significado=c("Muito abaixo do peso",
"Abaixo do peso",
"Peso normal",
"Acima do peso",
"Obesidade I",
"Obesidade II (severa)",
"Obesidade III (mórbida)"))
knitr::kable(imc, caption = 'Valores padrão para o IMC')
informacoes$tipoimc=ifelse(informacoes$Imc<17, "Muito abaixo do peso",
ifelse(informacoes$Imc>=17&informacoes$Imc<=18.49,"Abaixo do peso",
ifelse(informacoes$Imc>=18.5&informacoes$Imc<=24.99,"Peso Normal",
ifelse(informacoes$Imc>=25&informacoes$Imc<=29.99,"Acima do Peso",
ifelse(informacoes$Imc>=30&informacoes$Imc<=34.99,"Obesidade I",
ifelse(informacoes$Imc>=35&informacoes$Imc<=39.99,"Obesidade II",
"Obesidade III"))))))
informacoes
# Classificar informações usando o código binário
informacoes$binario= ifelse(informacoes$classificacao
== 'peso normal', 1, 0)
informacoes
novo1=data.frame(estudantes="Francisco", idade=30, peso=59,
cidades="Ijuí",
altura="1,59",
Imc= 23.30,
classificacao= "peso normal",
tipoimc="Peso Normal",
binario=1)
informacoes=rbind(informacoes, novo1)
informacoes
require(dplyr)
informacoes= mutate(informacoes,
"faixa etaria"= ifelse(informacoes$idade<21,
"não adulto", "adulto"))
informacoes
# Reordenar colunas
informacoes=informacoes[c(8,2,3,4,1,6,5,7,9)]
# Inversão do posicionamento dos elementos
rev(informacoes)
# contagem de objetos
table(informacoes$classificacao)
# Ordenar os objetos em ordem crescente
sort(informacoes$idade)
# Ordem decrescente
informacoes[order(informacoes$idade, decreasing = TRUE),]
#ordem crescente
informacoes[order(informacoes$idade, decreasing = FALSE),]
#ordem crescente
informacoes[order(informacoes$cidades, decreasing = FALSE),]
informacoes$rankingImc=rank(informacoes$Imc)
informacoes
log(1.5)
exp(1)
max(informacoes$idade)
min(informacoes$idade)
# Para descobrir em qual posição se encontra o peso mínimo:
which.min(informacoes$peso)
which.max(informacoes$peso)
informacoes$estudantes[which.min(informacoes$peso)]
informacoes$estudantes[which.max(informacoes$Imc)]
# Arredondar para n casas decimais
round(informacoes$Imc, 2)
x2 <- pi * 100^(-1:3)
round(x2, 3)
signif(x2, 3)
# Realiza a somatória dos valores
sum(informacoes$idade)
# Desvio padrão
sd(informacoes$idade)
# Variancia
var(informacoes$idade)
# Calcula a média aritmética dos valores
mean(informacoes$idade)
# Informa o valor mediano do conjunto
median(informacoes$idade)
quantile(informacoes$idade,  probs = c(0.5, 1, 2, 5, 10, 50)/100)
abertura <- c("03/02/69", "17/08/67")
fechamento <- c("2000-20-01", "1999-14-08")
abertura <- as.Date(abertura, format = "%d/%m/%y")
fechamento <- as.Date(fechamento, format = "%Y-%d-%m")
# Diferença de dias dos intervalos informados
abertura-fechamento
require(readxl)
url <- "https://goo.gl/37Fdzz"
destfile <- "pesquisa_dados.xlsx"
curl::curl_download(url, destfile)
pesquisa_dados <- read_excel(destfile)
attach(pesquisa_dados)
ls.str(pesquisa_dados)
table(Praticidade)
table(pesquisa_dados$Sexo,pesquisa_dados$Divulgacao)
prop.table(table(Divulgacao,Sexo))
barplot(table(Sexo))
barplot(table(`Pessoas_familia`), col=c("blue"), main = "Frequência de pessoas por família", xlab = "Frequência", ylab = "Pessoas", border = "red")
barplot(table(Sexo,Divulgacao), col=c("blue"),
main = "Frequência de pessoas por Sexo e Divulgacao")
Resultado<-table(Sexo,Divulgacao)
barplot(Resultado,col=c("blue","red"),main="Título",xlab="Variável do eixo x",
ylab="Informação que consta no eixo y", border='red',
beside=T,legend=rownames(Resultado))
pie(table(Sabor))
hist(as.numeric(`Renda_h`))
hist(as.numeric(`Renda_h`), breaks=5)
boxplot(Idade,horizontal = T)
stem(Idade,scale=2)
emp=data.frame(
Ano=c(1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010),
`Empresas Fiscalizadas`=c("7.042","6.561","8.585","9.641","8.873","9.367","13.856","12.192","13.326","13.390","10.839","13.379","11.978")
)
knitr::kable(emp, caption = 'Evolução dos resultados da fiscalização do trabalho na área rural Brasil 1998-2010')
empfisc=data.frame(ano=c(1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,
2008,2009,2010), qtd=c(7042,6561,8585,9641,8873,9367,
13856,12192,13326,13390,10839,13379,11978))
plot(empfisc$ano,empfisc$qtd,type="b",main="Título",
xlab="Nome_eixo_x",ylab="Nome_eixo_y",
col="blue",xlim=c(1998,2010))
library(readr)
inmet <- read_delim("https://goo.gl/se71v2",
";", escape_double = FALSE,
col_types = cols(data = col_date(format = "%m/%d/%Y")),
trim_ws = TRUE)
head(inmet)
plot(inmet$hora,inmet$temp_inst,type = "b",
main = "Temperaturas registradas na estação metereológica
de São Luis Gonzaga, 11 de abril de 2018",
xlab = "hora",ylab = "temperaturas",col="blue",
ylim = c(20,40))
lines(inmet$hora,inmet$temp_max,col="red",type = "b")
lines(inmet$hora,inmet$temp_min,col="green",type = "b")
legend(0,40,c("temp_inst","temp_max","temp_min"),
col =c("blue","red","green"),pch=4.1,cex = 0.75)
#Transforme a variável Renda_h em variável numérica
pesquisa_dados$Renda_h=as.numeric(pesquisa_dados$Renda_h)
#É preciso repetir o comando attach()
attach(pesquisa_dados)
max(Renda_h)
min(Renda_h)
max(Renda_h)-min(Renda_h)
summary(Renda_h)
subset(table(Praticidade),
table(Praticidade)==max(table(Praticidade)))
table(Pessoas_familia)
quantile(Renda_h)
quantile(Renda_h,0.1)
var(Pessoas_familia)
sd(Pessoas_familia)
subset(`Altura_(m)`, Sexo=="Masculino")
mean(subset(`Altura_(m)`, Sexo=="Masculino"))
mean(subset(`Altura_(m)`, Sexo=="Masculino"& Idade>25))
length(subset(Sexo,Sexo=="Feminino" & `Peso_(Kg)`<60))
table(subset(Sexo, Sabor=="Pessimo"))
knitr::include_graphics("infestat.png")
horasestudo=c(19,18,20,16,18,19,19,17,22,21)
t.test(horasestudo)
t.test(horasestudo, conf.level = 0.90)
t.test(horasestudo, conf.level = 0.99)
knitr::include_graphics("testehip1.png")
shapiro.test(horasestudo)
prop.test(260,500)
prop.test(260,500,conf.level = 0.90)
prop.test(260,500,conf.level = 0.99)
chuva=c(30.5,34.1,27.9,35,26.9,30.2,28.3,31.7,25.8)
chuva
t.test(chuva,alt="two.sided",mu=30)
tempo=c(22,20,21,23,22,20,23,22,20,24,21,20,21,24,22,22,23,22,20,24)
tempo
t.test(tempo,alt="greater",mu=20)
amostras=c(4.9,5.1,4.9,5.5,5.0,4.7)
t.test(amostras,alt="less",mu=5)
prop.test(3,80,p=0.03,alt="two.sided")
prop.test(530,1000,p=0.6,alt="two.sided")
prop.test(9,500,p=0.015,alt="greater")
prop.test(80,100,p=0.90,alt="less")
knitr::include_graphics("testehip2.png")
amostdep=data.frame(
`Indivíduo`=c("Peso antes do treinamento","Peso depois do treinamento"),
A=c(99,94),
B=c(62,62),
C=c(74,66),
D=c(59,58),
E=c(70,70),
F=c(73,76)
)
knitr::kable(amostdep, caption = 'Amostras dependentes')
antes=c(99,62,74,59,70,73)
depois=c(94,62,66,58,70,76)
t.test(antes,depois,paired=TRUE)
cob=data.frame(Cobaia=c("Antes","Depois"))
cobaiaantes=c(635,704,662,560,603,745,698,575,633,669)
cobaiadepois=c(640,712,681,558,610,740,707,585,635,682)
amostdep2=cbind(cob,rbind(cobaiaantes,cobaiadepois))
knitr::kable(amostdep2, caption = 'Amostras dependentes - caso 2',row.names = FALSE)
cobaiaantes=c(635,704,662,560,603,745,698,575,633,669)
cobaiadepois=c(640,712,681,558,610,740,707,585,635,682)
t.test(cobaiaantes,cobaiadepois,paired=TRUE)
cob2=c("Tecido A","Tecido B")
tecidoa=c(36,26,31,38,28,20,37)
tecidob=c(39,27,35,42,31,39,22)
amostdep3=cbind(c("Tecido A", "Tecido B"),rbind(tecidoa,tecidob))
knitr::kable(amostdep3, caption = 'Comparação de dois tipos diferentes de tecidos', row.names = FALSE)
t.test(tecidoa, tecidob, var.equal = TRUE, paired=FALSE)
borrachudos<-c(20,12,10,17,30,22,35)
dist<-c(0.10,0.10,0.10,0.15,0.15,0.15,0.25)
chisq.test(borrachudos)$expected
chisq.test(borrachudos,p=dist)
borrach<-c(20,12,10,17,30,22,35)
chisq.test(borrach)$expected
chisq.test(borrach)
require(kableExtra)
borrach=data.frame(
Ponto=c("Ponto 1","Ponto 2","Ponto 3","Ponto 4","Ponto 5","Ponto 6","Ponto 7"),
Borrachudos=c(19,12,10,17,25,22,15)
)
knitr::kable(borrach, caption = 'Número de borrachudos nos diferentes pontos') %>%
kable_styling(full_width = F) %>%
footnote(general = " Dados simulados.", general_title="Fonte:", footnote_as_chunk = T)
library("kableExtra", lib.loc="~/R/win-library/3.5")
mcnemar=matrix(c(15,18,5,7),nc=2)
mcnemar
chisq.test(mcnemar)$expected
mcnemar.test(mcnemar)
require(kableExtra)
Aprovado=c(15,5)
Desaprovado=c(18,7)
qui5=rbind(Aprovado,Desaprovado)
colnames(qui5)[2]='Sobrepeso'
colnames(qui5)[1]='Adequado'
kable(qui5, caption = 'Situação do peso de cobaias do estudo antes e após a intervenção') %>%
add_header_above(c("Peso Antes" = 1, "Peso Após" = 2)) %>%
footnote(general = " Dados simulados.", general_title ="Fonte:", footnote_as_chunk = T)
require(kableExtra)
borrach=data.frame(
Ponto=c("Ponto 1","Ponto 2","Ponto 3","Ponto 4","Ponto 5","Ponto 6","Ponto 7"),
Borrachudos=c(19,12,10,17,25,22,15)
)
knitr::kable(borrach, caption = 'Número de borrachudos nos diferentes pontos') %>%
footnote(general = " Dados simulados.", general_title="Fonte:", footnote_as_chunk = T)
quiquadrado2<-matrix(c(8,3,59,43),nc=2)
quiquadrado2
chisq.test(quiquadrado2)$expected
fisher.test(quiquadrado2)
knitr::opts_chunk$set(echo = TRUE,message = TRUE,
warning = TRUE, fig.height=5, fig.width=5)
knitr::opts_knit$get('rmarkdown.pandoc.to')
----------------------------------------
**Depois**
----------------------------------------
**Depois**
----------------------------------------
**Depois**
----------------------------------------
**Depois**
----------------------------------------
**Depois**
require(kableExtra)
Aprovado=c(15,5)
Desaprovado=c(18,7)
qui5=rbind(Aprovado,Desaprovado)
colnames(qui5)[2]='Sobrepeso'
colnames(qui5)[1]='Adequado'
kable(qui5, caption = 'Situação do peso de cobaias do estudo antes e após a intervenção') %>%
add_header_above(c("Peso Antes" = 1, "Peso Após" = 2)) %>%
footnote(general = " Dados simulados.", general_title ="Fonte:", footnote_as_chunk = T)
require(kableExtra)
Aprovado=c("a","b")
Desaprovado=c("c","d")
qui4=rbind(Aprovado,Desaprovado)
colnames(qui4)[2]='Desaprovado'
colnames(qui4)[1]='Aprovado'
kable(qui4, caption = 'Tabela de contingência') %>%
add_header_above(c("Antes" = 1, "Depois" = 2)) %>%
footnote(general = " Dados simulados.", general_title = "Fonte:", footnote_as_chunk = T)
borrach=data.frame(
Ponto=c("Ponto 1","Ponto 2","Ponto 3","Ponto 4","Ponto 5","Ponto 6","Ponto 7"),
Borrachudos=c(19,12,10,17,25,22,15)
)
knitr::kable(borrach, caption = 'Número de borrachudos nos diferentes pontos') %>%
footnote(general = " Dados simulados.", general_title="Fonte:", footnote_as_chunk = T)
borrach=data.frame(
Ponto=c("Ponto 1","Ponto 2","Ponto 3","Ponto 4","Ponto 5","Ponto 6","Ponto 7"),
Borrachudos=c(19,12,10,17,25,22,15)
)
knitr::kable(borrach, caption = 'Número de borrachudos nos diferentes pontos')
